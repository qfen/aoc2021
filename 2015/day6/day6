#!/usr/bin/perl
use v5.24;
use warnings;
use List::Util qw(reduce sum);

my @lights;
my $op;
my ($x1, $y1, $x2, $y2, $row, $col, $line);

while ($line = <STDIN>) {
	chomp $line;
	$line =~ /^(?:(?:turn )?(off|on|toggle)) (\d+),(\d+) through (\d+),(\d+)$/ or warn "weird line";
	($x1, $y1, $x2, $y2) = map { int } ($2, $3, $4, $5);

	$op = $1 eq 'off' ? 0 : ($1 eq 'on' ? 1 : 2);
	($x1, $x2) = ($x2, $x1) if $x1 > $x2;
	($y1, $y2) = ($y2, $y1) if $y1 > $y2;

	#say "($x1,$y1) to ($x2,$y2) op $op";
	for $row ($y1 .. $y2) {
		for $col ($x1 .. $x2) {
			if ($op == 2) {
				$lights[$row][$col] ^= 1;
			} else {
				$lights[$row][$col] = $op;
			}
		}
	}
}

{
	no warnings 'uninitialized';
	say reduce { $a + sum @$b } 0, @lights;
}
